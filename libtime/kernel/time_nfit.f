c this is <time_nfit.f> (extracted from ../libtime.f)
c automatically generated by "SPLITF.PL   V1.0   SPLIT Fortran source code"
c----------------------------------------------------------------------
c $Id: time_nfit.f,v 2.0 2000/08/05 21:58:30 thof Stab $
c
c 05/08/2000 by Thomas Forbriger (IfG Stuttgart)
c
c fill time span with given sampling interval
c
c REVISIONS and CHANGES
c    05/08/2000   V1.0   Thomas Forbriger
c                 V2.0   use language specific fatal error handler
c
c ============================================================================
cS
      subroutine time_nfit(date1, date2, n, full)
c
c Evaluate how many (n) samples of length date2 fit into the
c time span date1 at best. 
c 
c full=n*date2
c
c The difference abs(date1-full) will be less or equal
c the half of date2.
c
c input:
c   date1:  given time span (relative time record)
c   date2:  given sampling interval (relative time record)
c output:
c   n:      number of intervals date2 that fit at best in date1
c   full:   the full time span that would be covered by n intervals
c           of length date2 (regularized relative time record)
c
c last change: V2.00 (05/08/2000)
c
      integer date1(7), date2(7), n, full(7)
cE
      double precision d1, d2
      integer limit(7), i, time_compare, c, dif(7), dhalf(7), rest
      data limit/-1,-1,24,60,60,1000,1000/
c
      if ((date1(1).ne.0).or.(date2(1).ne.0)) then
        call time_util_fatal('time_nfit','no absolute times allowed')
      else
c for our convenience we will first use floating point arithmetics
c for an estimation
        d1=float(date1(2))
        d2=float(date2(2))
        do i=3,7
          d1=d1*float(limit(i))+float(date1(i))
          d2=d2*float(limit(i))+float(date2(i))
        enddo
        n=int(d1/d2)
c get half of sampling interval
        call time_div(date2, dhalf, 2, rest)
        dhalf(7)=dhalf(7)+rest
        call time_norm(dhalf)
c now go and fit result stepwise
    1   call time_mul(date2, full, n)
        c=time_compare(date1, full)
        call time_sub(date1, full, dif)
c next step if difference exceeds half of sampling rate
        if (time_compare(dif, dhalf).gt.0) then
          if (c.gt.0) then
            n=n+1
          else
            n=n-1
          endif
          goto 1
        endif
      endif
      return
      end
c
c ----- END OF <time_nfit.f> -----
