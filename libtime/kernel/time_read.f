c this is <time_read.f> (extracted from ../libtime.f)
c automatically generated by "SPLITF.PL   V1.0   SPLIT Fortran source code"
c----------------------------------------------------------------------
c $Id: time_read.f,v 2.0 2000/08/05 21:58:30 thof Stab $
c
c 05/08/2000 by Thomas Forbriger (IfG Stuttgart)
c
c read date value from string
c NOTICE: this routine is language specific as it call index!
c
c REVISIONS and CHANGES
c    05/08/2000   V2.0   Thomas Forbriger
c
c ============================================================================
cS
      subroutine time_read(string,date)
c
c Reads date value from string.
c
c The timestring has to provide time information in the order
c 
c   year month day hours minutes seconds
c 
c where seconds may be given as a floating point number. All items must be
c separated by non-numerical characters. 
c
c input:
c   string: character string specifying date value
c output:
c   date:   fully qualified and regularized time record
c
c last change: V2.00 (05/08/2000)
c
      character*(*) string
      integer date(7)
c 
cE
      integer numbers(5), i, first, last, length, index
      double precision seconds
c 
      call time_clear(date)
c fill array with numbers
      length=len(string)
      first=1
      do i=1,5
        numbers(i)=0
        do while ((first.lt.length).and.
     &      (index('.0123456789', string(first:first)).eq.0))
          first=first+1
        enddo
        last=first
        do while ((last.lt.length).and.
     &      (index('.0123456789', string(last:last)).gt.0))
          last=last+1
        enddo
        if (index('0123456789', string(last:last)).lt.1) last=last-1
        if ((first.le.length).and.(index('0123456789',
     &      string(first:first)).gt.0)) then
          read(string(first:last), *) numbers(i)
          first=last+1
        endif
      enddo
c read seconds
      seconds=0.d0
      do while ((first.lt.length).and.
     &    (index('.0123456789', string(first:first)).eq.0))
        first=first+1
      enddo
      last=first
      do while ((last.lt.length).and.
     &    (index('.0123456789', string(last:last)).gt.0))
        last=last+1
      enddo
      read(string(first:last), *) 
      if ((first.le.length).and.(index('0123456789',
     &    string(first:first)).gt.0)) then
        read(string(first:last), *) seconds
        first=last+1
      endif
c 
      if ((numbers(1).gt.0).or.(numbers(2).gt.0)) then
c absolute date
        date(1)=numbers(1)
        call time_fullyear(date(1))
        call time_setdoy(numbers(3),numbers(2),date)
      else
c relative date
        date(2)=numbers(3)
      endif
c hour and minute 
      do i=1,2
        date(i+2)=numbers(i+3)
      enddo
c seconds, etc.
      date(5)=int(seconds)
      seconds=(seconds-dble(date(5)))*1000.d0
      date(6)=int(seconds)
      seconds=(seconds-dble(date(6)))*1000.d0
      date(7)=int(seconds+0.5d0)
c 
      call time_norm(date)
c 
      return
      end
c
c ----- END OF <time_read.f> -----
